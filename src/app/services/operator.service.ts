import { Injectable } from "@angular/core";
import { HttpClient, HttpHeaders, HttpResponse } from "@angular/common/http";
import { Observable, throwError } from "rxjs";
import { catchError, map, tap } from "rxjs/operators";

import { Config } from "../config";
import { Operator } from "../model/operator.model";

@Injectable()
export class OperatorService {
    baseUrl = "https://crudcrud.com/api/f4d81a9ed14747048fcf1fcfb0690ba2";

    constructor(private http: HttpClient) { }

    // load() {
    //     // Kinvey-specific syntax to sort the groceries by last modified time. Donâ€™t worry about the details here.
    //     let params = {
    //         "sort": "{\"_kmd.lmt\": 1}"
    //     }

    //     return this.http.get(this.baseUrl, {
    //         headers: this.getCommonHeaders(),
    //         params: params
    //     }).pipe(
    //         map((data: []) => {
    //             console.log(data)
    //             let operatorList = [];
    //             data.forEach((operator) => {
    //                 operatorList.push(new Operator((<any>operator)._id, (<any>operator).Name));
    //             });
    //             return operatorList;
    //         }),
    //         catchError(this.handleErrors)
    //     );
    // }
    // add(operator: Operator) {
    //     delete operator._id; // we delete the id because it'll generated by server
    //     return this.http.post(`${this.baseUrl}/operator`, operator);
    // }
    load() {
        return this.http.get(`${this.baseUrl}/operator`);
    }
    // delete(id) {
    //     return this.http.delete(`${this.baseUrl}/operator/${id}`);
    //   }
    // add(name: string) {
    //     return this.http.post(`${this.baseUrl}/operator`, param);
    //     return this.http.get<Operator[]>(`${this.baseUrl}/operator`);
    // return this.http.post(
    //     this.baseUrl,
    //     JSON.stringify({ Name: name }),
    //     { headers: this.getCommonHeaders() }
    // ).pipe(
    //     map(data => {
    //         return new Operator((<any>data)._id, name);
    //     }),
    //     catchError(this.handleErrors)
    // );
    // }
    getCommonHeaders() {
        return {
            "Content-Type": "application/json",
            "Authorization": "Kinvey " + Config.authHeader
        }
    }

    handleErrors(error: Response) {
        console.log(JSON.stringify(error));
        return throwError(error);
    }
}